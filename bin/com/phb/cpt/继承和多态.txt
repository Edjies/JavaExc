### 继承 java语言程序设计-11.2
理解在继承父类属性的基础上, 添加一些新的方法和属性.   可以想象成一个子类对象中包裹着一个父类对象.


### 子类的构造器 java语言程序设计-11.3
理解默认隐式调用父类构造器
//***1.显示调用父类构造器，super语句必须出现在子类构造方法的第一行;
2.隐式调用父类构造器，默认调用父类的无参构造方法。
3.当一个类定义了有参的构造时，默认的无参构造就没有了
4.父类没有默认的无参构造方法时，会报错，需要显式调用有参的构造。


理解super关键字显示调用父类构造器
//***关键字可以用于两种途径：1，调用父类的构造方法2，调用父类的方法
构造方法用于构建一个类的实例。不同于属性和普通方法，父类的构造方法不会
被子类继承。他们只能使用关键字super从子类的构造方法中调用。
语法是super();或者  super(parameters);
语句super();调用父类的无参构造方法;
而语句super(parameters);调用与参数匹配的父类的构造方法。
super语句必须出现在子类构造方法的第一行，这是显式调用父类构造方法的唯一方式。

//***构造方法链
在任何情况下，构造一个类的实例时，将会调用沿着继承链的所有父类的构造方法，当构造一个子类的对象时，
子类构造方法会在完成自己的任务之前，首先调用他的父类的构造方法。如果父类继承自其它类，那么父类的
构造方法又会在完成自己任务之前，调用他自己的父类的构造方法。这个过程持续到沿着这个继承体系结果的
最后一个构造方法被调用为止。这就是构造方法链。

//***调用父类的方法
语法：super.方法名（参数）;



### 方法重写(override)  java语言程序设计-11.4 和 11.5
Q: super关键字调用父类方法?
Q: 方法重写和方法重载的区别?

//***方法的重写
子类从父类中继承方法，有时子类需要修改父类中定义的方法的实现，这称作方法重写。
要重写一个方法，需要在子类中使用和父类一样的签名以及一样的返回值类型来对该方法进行定义。
！！！1.仅当实例方法是可访问时，他才能被覆盖。因为私有方法在他的类本身之外是不能访问的。
所以他不能被覆盖。如果子类中定义的方法在父类中是私有的，那么这两个方法完全没有关系。
2.与实例方法一样，静态方法也能被继承，但是，静态方法不能被覆盖。如果父类中定义的静态方法
在子类中被重新定义，那么在父类中定义的静态方法将被隐藏。可以使用语法：父类名.静态方法名 ~调用隐藏的静态方法。

### 单一继承 多重次继承 
若: A extends B,   B extends C,  则: A extends C
一个类不能同时继承两个父类

### 理解多态  java语言程序设计-11.7 和 11.8



### Q: final关键字的几个作用  5.1.7
	A:
	1. final声明的类不可被继承
	2. final声明的方法不可被重写
	3. final声明的变量不可被更改


### 继承和组合 
Q: 什么时候使用继承, 什么时候使用组合?
A: 对象的关系是 'is a' 的时候, 使用继承,  对象的关系是 'has a'的时候使用组合


### 再说对象的可访问性  java语言程序设计-11.7 和 11.8


